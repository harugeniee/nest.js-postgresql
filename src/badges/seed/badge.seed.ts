import {
  BADGE_METADATA,
  BadgeCategory,
  BadgeRarity,
  BadgeStatus,
  BadgeType,
} from 'src/shared/constants';
import { Badge } from '../entities/badge.entity';

/**
 * Seed data for badges
 * Creates default badges similar to Discord's badge system
 */
export const badgeSeedData: Partial<Badge>[] = [
  // Common badges
  {
    type: BadgeType.NITRO_SUBSCRIBER,
    name: BADGE_METADATA[BadgeType.NITRO_SUBSCRIBER].name,
    description: BADGE_METADATA[BadgeType.NITRO_SUBSCRIBER].description,
    category: BadgeCategory.COMMON,
    rarity: BadgeRarity.COMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 40,
    isAutoAssigned: true,
    isManuallyAssignable: false,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.NITRO_SUBSCRIBER].requirements,
  },
  {
    type: BadgeType.SERVER_BOOSTING,
    name: BADGE_METADATA[BadgeType.SERVER_BOOSTING].name,
    description: BADGE_METADATA[BadgeType.SERVER_BOOSTING].description,
    category: BadgeCategory.COMMON,
    rarity: BadgeRarity.COMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 41,
    isAutoAssigned: true,
    isManuallyAssignable: false,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.SERVER_BOOSTING].requirements,
  },
  {
    type: BadgeType.QUEST_BADGE,
    name: BADGE_METADATA[BadgeType.QUEST_BADGE].name,
    description: BADGE_METADATA[BadgeType.QUEST_BADGE].description,
    category: BadgeCategory.COMMON,
    rarity: BadgeRarity.COMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 60,
    isAutoAssigned: true,
    isManuallyAssignable: false,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.QUEST_BADGE].requirements,
  },
  {
    type: BadgeType.ACTIVE_DEVELOPER,
    name: BADGE_METADATA[BadgeType.ACTIVE_DEVELOPER].name,
    description: BADGE_METADATA[BadgeType.ACTIVE_DEVELOPER].description,
    category: BadgeCategory.COMMON,
    rarity: BadgeRarity.COMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 61,
    isAutoAssigned: true,
    isManuallyAssignable: false,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.ACTIVE_DEVELOPER].requirements,
  },

  // Paid badges
  {
    type: BadgeType.ORBS_APPRENTICE,
    name: BADGE_METADATA[BadgeType.ORBS_APPRENTICE].name,
    description: BADGE_METADATA[BadgeType.ORBS_APPRENTICE].description,
    category: BadgeCategory.PAID,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 70,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.ORBS_APPRENTICE].requirements,
  },

  // Rare badges
  {
    type: BadgeType.BUG_HUNTER,
    name: BADGE_METADATA[BadgeType.BUG_HUNTER].name,
    description: BADGE_METADATA[BadgeType.BUG_HUNTER].description,
    category: BadgeCategory.RARE,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 3,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.BUG_HUNTER].requirements,
  },
  {
    type: BadgeType.GOLD_BUG_HUNTER,
    name: BADGE_METADATA[BadgeType.GOLD_BUG_HUNTER].name,
    description: BADGE_METADATA[BadgeType.GOLD_BUG_HUNTER].description,
    category: BadgeCategory.RARE,
    rarity: BadgeRarity.EPIC,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 2,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.GOLD_BUG_HUNTER].requirements,
  },
  {
    type: BadgeType.DISCORD_STAFF,
    name: BADGE_METADATA[BadgeType.DISCORD_STAFF].name,
    description: BADGE_METADATA[BadgeType.DISCORD_STAFF].description,
    category: BadgeCategory.RARE,
    rarity: BadgeRarity.LEGENDARY,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 1,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.DISCORD_STAFF].requirements,
  },

  // Unobtainable badges
  {
    type: BadgeType.EARLY_SUPPORTER,
    name: BADGE_METADATA[BadgeType.EARLY_SUPPORTER].name,
    description: BADGE_METADATA[BadgeType.EARLY_SUPPORTER].description,
    category: BadgeCategory.UNOBTAINABLE,
    rarity: BadgeRarity.LEGENDARY,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 30,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: false,
    requirements: BADGE_METADATA[BadgeType.EARLY_SUPPORTER].requirements,
  },
  {
    type: BadgeType.EARLY_VERIFIED_BOT_DEVELOPER,
    name: BADGE_METADATA[BadgeType.EARLY_VERIFIED_BOT_DEVELOPER].name,
    description:
      BADGE_METADATA[BadgeType.EARLY_VERIFIED_BOT_DEVELOPER].description,
    category: BadgeCategory.UNOBTAINABLE,
    rarity: BadgeRarity.EPIC,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 11,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: false,
    requirements:
      BADGE_METADATA[BadgeType.EARLY_VERIFIED_BOT_DEVELOPER].requirements,
  },
  {
    type: BadgeType.PARTNERED_SERVER_OWNER,
    name: BADGE_METADATA[BadgeType.PARTNERED_SERVER_OWNER].name,
    description: BADGE_METADATA[BadgeType.PARTNERED_SERVER_OWNER].description,
    category: BadgeCategory.UNOBTAINABLE,
    rarity: BadgeRarity.LEGENDARY,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 10,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: false,
    requirements: BADGE_METADATA[BadgeType.PARTNERED_SERVER_OWNER].requirements,
  },
  {
    type: BadgeType.HYPESQUAD_BALANCE,
    name: BADGE_METADATA[BadgeType.HYPESQUAD_BALANCE].name,
    description: BADGE_METADATA[BadgeType.HYPESQUAD_BALANCE].description,
    category: BadgeCategory.UNOBTAINABLE,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 21,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: false,
    requirements: BADGE_METADATA[BadgeType.HYPESQUAD_BALANCE].requirements,
  },
  {
    type: BadgeType.HYPESQUAD_BRAVERY,
    name: BADGE_METADATA[BadgeType.HYPESQUAD_BRAVERY].name,
    description: BADGE_METADATA[BadgeType.HYPESQUAD_BRAVERY].description,
    category: BadgeCategory.UNOBTAINABLE,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 22,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: false,
    requirements: BADGE_METADATA[BadgeType.HYPESQUAD_BRAVERY].requirements,
  },
  {
    type: BadgeType.HYPESQUAD_BRILLIANCE,
    name: BADGE_METADATA[BadgeType.HYPESQUAD_BRILLIANCE].name,
    description: BADGE_METADATA[BadgeType.HYPESQUAD_BRILLIANCE].description,
    category: BadgeCategory.UNOBTAINABLE,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 23,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: false,
    requirements: BADGE_METADATA[BadgeType.HYPESQUAD_BRILLIANCE].requirements,
  },
  {
    type: BadgeType.HYPESQUAD_EVENTS,
    name: BADGE_METADATA[BadgeType.HYPESQUAD_EVENTS].name,
    description: BADGE_METADATA[BadgeType.HYPESQUAD_EVENTS].description,
    category: BadgeCategory.UNOBTAINABLE,
    rarity: BadgeRarity.EPIC,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 20,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: false,
    requirements: BADGE_METADATA[BadgeType.HYPESQUAD_EVENTS].requirements,
  },
  {
    type: BadgeType.MODERATOR_PROGRAMS_ALUMNI,
    name: BADGE_METADATA[BadgeType.MODERATOR_PROGRAMS_ALUMNI].name,
    description:
      BADGE_METADATA[BadgeType.MODERATOR_PROGRAMS_ALUMNI].description,
    category: BadgeCategory.UNOBTAINABLE,
    rarity: BadgeRarity.EPIC,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 4,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: false,
    requirements:
      BADGE_METADATA[BadgeType.MODERATOR_PROGRAMS_ALUMNI].requirements,
  },
  {
    type: BadgeType.LEGACY_USERNAME,
    name: BADGE_METADATA[BadgeType.LEGACY_USERNAME].name,
    description: BADGE_METADATA[BadgeType.LEGACY_USERNAME].description,
    category: BadgeCategory.UNOBTAINABLE,
    rarity: BadgeRarity.LEGENDARY,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 31,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: false,
    requirements: BADGE_METADATA[BadgeType.LEGACY_USERNAME].requirements,
  },
  {
    type: BadgeType.CLOWN_BADGE,
    name: BADGE_METADATA[BadgeType.CLOWN_BADGE].name,
    description: BADGE_METADATA[BadgeType.CLOWN_BADGE].description,
    category: BadgeCategory.UNOBTAINABLE,
    rarity: BadgeRarity.MYTHIC,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 32,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: false,
    requirements: BADGE_METADATA[BadgeType.CLOWN_BADGE].requirements,
  },

  // App badges
  {
    type: BadgeType.SUPPORTS_COMMANDS,
    name: BADGE_METADATA[BadgeType.SUPPORTS_COMMANDS].name,
    description: BADGE_METADATA[BadgeType.SUPPORTS_COMMANDS].description,
    category: BadgeCategory.APP,
    rarity: BadgeRarity.COMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 51,
    isAutoAssigned: false,
    isManuallyAssignable: false,
    isRevokable: false,
    requirements: BADGE_METADATA[BadgeType.SUPPORTS_COMMANDS].requirements,
  },
  {
    type: BadgeType.PREMIUM_APP,
    name: BADGE_METADATA[BadgeType.PREMIUM_APP].name,
    description: BADGE_METADATA[BadgeType.PREMIUM_APP].description,
    category: BadgeCategory.APP,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 50,
    isAutoAssigned: false,
    isManuallyAssignable: false,
    isRevokable: false,
    requirements: BADGE_METADATA[BadgeType.PREMIUM_APP].requirements,
  },
  {
    type: BadgeType.USES_AUTOMOD,
    name: BADGE_METADATA[BadgeType.USES_AUTOMOD].name,
    description: BADGE_METADATA[BadgeType.USES_AUTOMOD].description,
    category: BadgeCategory.APP,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 52,
    isAutoAssigned: false,
    isManuallyAssignable: false,
    isRevokable: false,
    requirements: BADGE_METADATA[BadgeType.USES_AUTOMOD].requirements,
  },

  // Custom badges
  {
    type: BadgeType.CONTENT_CREATOR,
    name: BADGE_METADATA[BadgeType.CONTENT_CREATOR].name,
    description: BADGE_METADATA[BadgeType.CONTENT_CREATOR].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 103,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.CONTENT_CREATOR].requirements,
  },
  {
    type: BadgeType.COMMUNITY_MODERATOR,
    name: BADGE_METADATA[BadgeType.COMMUNITY_MODERATOR].name,
    description: BADGE_METADATA[BadgeType.COMMUNITY_MODERATOR].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 102,
    isAutoAssigned: false,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.COMMUNITY_MODERATOR].requirements,
  },
  {
    type: BadgeType.EARLY_ADOPTER,
    name: BADGE_METADATA[BadgeType.EARLY_ADOPTER].name,
    description: BADGE_METADATA[BadgeType.EARLY_ADOPTER].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.EPIC,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: false,
    displayOrder: 106,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: false,
    requirements: BADGE_METADATA[BadgeType.EARLY_ADOPTER].requirements,
  },
  {
    type: BadgeType.BETA_TESTER,
    name: BADGE_METADATA[BadgeType.BETA_TESTER].name,
    description: BADGE_METADATA[BadgeType.BETA_TESTER].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 107,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.BETA_TESTER].requirements,
  },
  {
    type: BadgeType.CONTRIBUTOR,
    name: BADGE_METADATA[BadgeType.CONTRIBUTOR].name,
    description: BADGE_METADATA[BadgeType.CONTRIBUTOR].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 108,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.CONTRIBUTOR].requirements,
  },
  {
    type: BadgeType.VERIFIED_USER,
    name: BADGE_METADATA[BadgeType.VERIFIED_USER].name,
    description: BADGE_METADATA[BadgeType.VERIFIED_USER].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 104,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.VERIFIED_USER].requirements,
  },
  {
    type: BadgeType.PREMIUM_USER,
    name: BADGE_METADATA[BadgeType.PREMIUM_USER].name,
    description: BADGE_METADATA[BadgeType.PREMIUM_USER].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 105,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.PREMIUM_USER].requirements,
  },
  {
    type: BadgeType.ORGANIZATION_MEMBER,
    name: BADGE_METADATA[BadgeType.ORGANIZATION_MEMBER].name,
    description: BADGE_METADATA[BadgeType.ORGANIZATION_MEMBER].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.COMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 200,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.ORGANIZATION_MEMBER].requirements,
  },
  {
    type: BadgeType.ORGANIZATION_ADMIN,
    name: BADGE_METADATA[BadgeType.ORGANIZATION_ADMIN].name,
    description: BADGE_METADATA[BadgeType.ORGANIZATION_ADMIN].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 101,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.ORGANIZATION_ADMIN].requirements,
  },
  {
    type: BadgeType.ORGANIZATION_OWNER,
    name: BADGE_METADATA[BadgeType.ORGANIZATION_OWNER].name,
    description: BADGE_METADATA[BadgeType.ORGANIZATION_OWNER].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.EPIC,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 100,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.ORGANIZATION_OWNER].requirements,
  },
  {
    type: BadgeType.ARTICLE_AUTHOR,
    name: BADGE_METADATA[BadgeType.ARTICLE_AUTHOR].name,
    description: BADGE_METADATA[BadgeType.ARTICLE_AUTHOR].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 109,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.ARTICLE_AUTHOR].requirements,
  },
  {
    type: BadgeType.COMMENT_MODERATOR,
    name: BADGE_METADATA[BadgeType.COMMENT_MODERATOR].name,
    description: BADGE_METADATA[BadgeType.COMMENT_MODERATOR].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 110,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.COMMENT_MODERATOR].requirements,
  },
  {
    type: BadgeType.REACTION_LEADER,
    name: BADGE_METADATA[BadgeType.REACTION_LEADER].name,
    description: BADGE_METADATA[BadgeType.REACTION_LEADER].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 111,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.REACTION_LEADER].requirements,
  },
  {
    type: BadgeType.SHARE_CHAMPION,
    name: BADGE_METADATA[BadgeType.SHARE_CHAMPION].name,
    description: BADGE_METADATA[BadgeType.SHARE_CHAMPION].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 112,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.SHARE_CHAMPION].requirements,
  },
  {
    type: BadgeType.BOOKMARK_COLLECTOR,
    name: BADGE_METADATA[BadgeType.BOOKMARK_COLLECTOR].name,
    description: BADGE_METADATA[BadgeType.BOOKMARK_COLLECTOR].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 113,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.BOOKMARK_COLLECTOR].requirements,
  },
  {
    type: BadgeType.FOLLOW_INFLUENCER,
    name: BADGE_METADATA[BadgeType.FOLLOW_INFLUENCER].name,
    description: BADGE_METADATA[BadgeType.FOLLOW_INFLUENCER].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 114,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.FOLLOW_INFLUENCER].requirements,
  },
  {
    type: BadgeType.NOTIFICATION_MASTER,
    name: BADGE_METADATA[BadgeType.NOTIFICATION_MASTER].name,
    description: BADGE_METADATA[BadgeType.NOTIFICATION_MASTER].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 115,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.NOTIFICATION_MASTER].requirements,
  },
  {
    type: BadgeType.QR_CODE_EXPERT,
    name: BADGE_METADATA[BadgeType.QR_CODE_EXPERT].name,
    description: BADGE_METADATA[BadgeType.QR_CODE_EXPERT].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 116,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.QR_CODE_EXPERT].requirements,
  },
  {
    type: BadgeType.STICKER_CREATOR,
    name: BADGE_METADATA[BadgeType.STICKER_CREATOR].name,
    description: BADGE_METADATA[BadgeType.STICKER_CREATOR].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 117,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.STICKER_CREATOR].requirements,
  },
  {
    type: BadgeType.TAG_MASTER,
    name: BADGE_METADATA[BadgeType.TAG_MASTER].name,
    description: BADGE_METADATA[BadgeType.TAG_MASTER].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 118,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.TAG_MASTER].requirements,
  },
  {
    type: BadgeType.REPORT_RESPONDER,
    name: BADGE_METADATA[BadgeType.REPORT_RESPONDER].name,
    description: BADGE_METADATA[BadgeType.REPORT_RESPONDER].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 119,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.REPORT_RESPONDER].requirements,
  },
  {
    type: BadgeType.ANALYTICS_EXPERT,
    name: BADGE_METADATA[BadgeType.ANALYTICS_EXPERT].name,
    description: BADGE_METADATA[BadgeType.ANALYTICS_EXPERT].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.RARE,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 120,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.ANALYTICS_EXPERT].requirements,
  },
  {
    type: BadgeType.WORKER_CONTRIBUTOR,
    name: BADGE_METADATA[BadgeType.WORKER_CONTRIBUTOR].name,
    description: BADGE_METADATA[BadgeType.WORKER_CONTRIBUTOR].description,
    category: BadgeCategory.CUSTOM,
    rarity: BadgeRarity.UNCOMMON,
    status: BadgeStatus.ACTIVE,
    isVisible: true,
    isObtainable: true,
    displayOrder: 121,
    isAutoAssigned: true,
    isManuallyAssignable: true,
    isRevokable: true,
    requirements: BADGE_METADATA[BadgeType.WORKER_CONTRIBUTOR].requirements,
  },
];
