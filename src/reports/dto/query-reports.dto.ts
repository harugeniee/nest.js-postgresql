import { IsOptional, IsString, IsEnum, IsBoolean, IsDateString } from 'class-validator';
import { Type } from 'class-transformer';
import { AdvancedPaginationDto } from 'src/common/dto/advanced-pagination.dto';
import { ApiPropertyOptional } from '@nestjs/swagger';
import {
  REPORT_CONSTANTS,
  ReportStatus,
  ReportPriority,
  ReportableType,
  ReportReason,
} from 'src/shared/constants';

/**
 * DTO for querying reports with filtering and pagination
 */
export class QueryReportsDto extends AdvancedPaginationDto {
  @ApiPropertyOptional({
    description: 'Filter by report status',
    enum: REPORT_CONSTANTS.STATUS,
    example: 'pending',
  })
  @IsOptional()
  @IsEnum(REPORT_CONSTANTS.STATUS)
  status?: ReportStatus;

  @ApiPropertyOptional({
    description: 'Filter by report priority',
    enum: REPORT_CONSTANTS.PRIORITY,
    example: 'high',
  })
  @IsOptional()
  @IsEnum(REPORT_CONSTANTS.PRIORITY)
  priority?: ReportPriority;

  @ApiPropertyOptional({
    description: 'Filter by reportable type',
    enum: REPORT_CONSTANTS.REPORTABLE_TYPES,
    example: 'article',
  })
  @IsOptional()
  @IsEnum(REPORT_CONSTANTS.REPORTABLE_TYPES)
  reportableType?: ReportableType;

  @ApiPropertyOptional({
    description: 'Filter by report reason',
    enum: REPORT_CONSTANTS.REASONS,
    example: 'spam',
  })
  @IsOptional()
  @IsEnum(REPORT_CONSTANTS.REASONS)
  reason?: ReportReason;

  @ApiPropertyOptional({
    description: 'Filter by reporter ID',
    example: '1234567890123456789',
  })
  @IsOptional()
  @IsString()
  reporterId?: string;

  @ApiPropertyOptional({
    description: 'Filter by moderator ID',
    example: '1234567890123456789',
  })
  @IsOptional()
  @IsString()
  moderatorId?: string;

  @ApiPropertyOptional({
    description: 'Filter by reportable ID',
    example: '1234567890123456789',
  })
  @IsOptional()
  @IsString()
  reportableId?: string;

  @ApiPropertyOptional({
    description: 'Filter by auto-generated reports',
    example: false,
  })
  @IsOptional()
  @IsBoolean()
  @Type(() => Boolean)
  isAutoGenerated?: boolean;

  @ApiPropertyOptional({
    description: 'Filter reports created after this date',
    example: '2024-01-01T00:00:00Z',
  })
  @IsOptional()
  @IsDateString()
  createdAfter?: string;

  @ApiPropertyOptional({
    description: 'Filter reports created before this date',
    example: '2024-12-31T23:59:59Z',
  })
  @IsOptional()
  @IsDateString()
  createdBefore?: string;

  @ApiPropertyOptional({
    description: 'Filter reports assigned after this date',
    example: '2024-01-01T00:00:00Z',
  })
  @IsOptional()
  @IsDateString()
  assignedAfter?: string;

  @ApiPropertyOptional({
    description: 'Filter reports assigned before this date',
    example: '2024-12-31T23:59:59Z',
  })
  @IsOptional()
  @IsDateString()
  assignedBefore?: string;

  @ApiPropertyOptional({
    description: 'Filter reports resolved after this date',
    example: '2024-01-01T00:00:00Z',
  })
  @IsOptional()
  @IsDateString()
  resolvedAfter?: string;

  @ApiPropertyOptional({
    description: 'Filter reports resolved before this date',
    example: '2024-12-31T23:59:59Z',
  })
  @IsOptional()
  @IsDateString()
  resolvedBefore?: string;

  @ApiPropertyOptional({
    description: 'Filter by minimum duplicate count',
    example: 3,
  })
  @IsOptional()
  @Type(() => Number)
  minDuplicateCount?: number;

  @ApiPropertyOptional({
    description: 'Filter by maximum duplicate count',
    example: 10,
  })
  @IsOptional()
  @Type(() => Number)
  maxDuplicateCount?: number;
}
