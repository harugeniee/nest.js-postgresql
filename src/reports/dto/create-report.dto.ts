import {
  IsString,
  IsOptional,
  IsEnum,
  IsNotEmpty,
  MaxLength,
  IsBoolean,
  IsObject,
} from 'class-validator';
import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
import {
  REPORT_CONSTANTS,
  ReportableType,
  ReportReason,
  ReportPriority,
} from 'src/shared/constants';

/**
 * DTO for creating a new report
 */
export class CreateReportDto {
  @ApiProperty({
    description: 'Type of content being reported',
    enum: REPORT_CONSTANTS.REPORTABLE_TYPES,
    example: 'article',
  })
  @IsEnum(REPORT_CONSTANTS.REPORTABLE_TYPES)
  @IsNotEmpty()
  reportableType: ReportableType;

  @ApiProperty({
    description: 'ID of the content being reported',
    example: '1234567890123456789',
  })
  @IsString()
  @IsNotEmpty()
  reportableId: string;

  @ApiProperty({
    description: 'Reason for the report',
    enum: REPORT_CONSTANTS.REASONS,
    example: 'spam',
  })
  @IsEnum(REPORT_CONSTANTS.REASONS)
  @IsNotEmpty()
  reason: ReportReason;

  @ApiPropertyOptional({
    description: 'Additional description provided by the reporter',
    maxLength: REPORT_CONSTANTS.DESCRIPTION_MAX_LENGTH,
    example: 'This content contains inappropriate language and harassment.',
  })
  @IsOptional()
  @IsString()
  @MaxLength(REPORT_CONSTANTS.DESCRIPTION_MAX_LENGTH)
  description?: string;

  @ApiPropertyOptional({
    description: 'Priority level of the report',
    enum: REPORT_CONSTANTS.PRIORITY,
    default: REPORT_CONSTANTS.PRIORITY.MEDIUM,
    example: 'medium',
  })
  @IsOptional()
  @IsEnum(REPORT_CONSTANTS.PRIORITY)
  priority?: ReportPriority = REPORT_CONSTANTS.PRIORITY.MEDIUM;

  @ApiPropertyOptional({
    description: 'Whether this report was automatically generated',
    default: false,
    example: false,
  })
  @IsOptional()
  @IsBoolean()
  isAutoGenerated?: boolean = false;

  @ApiPropertyOptional({
    description: 'Additional metadata for the report',
    example: { source: 'mobile_app', version: '1.0.0' },
  })
  @IsOptional()
  @IsObject()
  metadata?: Record<string, any>;
}
