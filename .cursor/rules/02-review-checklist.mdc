---
alwaysApply: true
---

@rule acceptance_checklist
Before finalizing:
- [ ] Entity extends BaseEntityCustom with explicit @Entity('table_name').
- [ ] No business logic in controllers; all logic lives in services.
- [ ] Service extends BaseService and configures cache prefix correctly.
- [ ] listCursor uses signed cursors (encodeSignedCursor/decodeSignedCursor); no custom base64 offsets.
- [ ] ConditionBuilder used for all dynamic filters (no raw SQL concat).
- [ ] DTOs use class-validator; limit clamped 1..100; ID via SnowflakeIdPipe.
- [ ] Cache invalidation in afterCreate/afterUpdate/afterDelete hooks.
- [ ] No migrations/generators used; all package commands are Yarn.
- [ ] Relations and select whitelists configured for security.
- [ ] RabbitMQ events sent instead of EventEmitter for async processing.
- [ ] Proper error handling with i18n message keys.
- [ ] Transaction support for complex operations.@rule acceptance_checklist
Before finalizing:
- [ ] Entity extends BaseEntityCustom with explicit @Entity('table_name').
- [ ] No business logic in controllers; all logic lives in services.
- [ ] Service extends BaseService and configures cache prefix correctly.
- [ ] listCursor uses signed cursors (encodeSignedCursor/decodeSignedCursor); no custom base64 offsets.
- [ ] ConditionBuilder used for all dynamic filters (no raw SQL concat).
- [ ] DTOs use class-validator; limit clamped 1..100; ID via SnowflakeIdPipe.
- [ ] Cache invalidation in afterCreate/afterUpdate/afterDelete hooks.
- [ ] No migrations/generators used; all package commands are Yarn.
- [ ] Relations and select whitelists configured for security.
- [ ] RabbitMQ events sent instead of EventEmitter for async processing.
- [ ] Proper error handling with i18n message keys.
- [ ] Transaction support for complex operations.