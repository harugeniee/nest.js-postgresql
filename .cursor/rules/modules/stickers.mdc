---
alwaysApply: false
---

@rule stickers_contract
Entity `Sticker` (current implementation):
- name (varchar), tags (varchar), format (enum), width/height (int)
- durationMs (int), isAnimated (bool), mediaId (bigint FK)
- indexes: (name), (tags), (format)

Related entity:
- StickerPack: collections of stickers

Service config:
- entityName: 'Sticker'; cache: { prefix: 'stickers', ttlSec: 300, swrSec: 60 }
- defaultSearchField: 'name'
- getSearchableColumns(): ['name', 'tags']
- relationsWhitelist: { media: true, pack: true }

Controller routes:
- GET /stickers -> list stickers
- GET /stickers/packs -> list sticker packs
- POST /stickers -> @Auth(['admin']) create sticker
- POST /stickers/packs -> @Auth(['admin']) create pack
- GET /stickers/:id -> get sticker by ID

@acceptance
- [ ] Upload flow uses existing media pipeline.
- [ ] Retrieval via standard comment read path.
- [ ] Proper format validation (image, video, gif).
- [ ] Animation detection for GIFs.
- [ ] Tag-based search and filtering.
- [ ] Pack organization and management.
- [ ] Usage tracking and analytics.@rule stickers_contract
Entity `Sticker` (current implementation):
- name (varchar), tags (varchar), format (enum), width/height (int)
- durationMs (int), isAnimated (bool), mediaId (bigint FK)
- indexes: (name), (tags), (format)

Related entity:
- StickerPack: collections of stickers

Service config:
- entityName: 'Sticker'; cache: { prefix: 'stickers', ttlSec: 300, swrSec: 60 }
- defaultSearchField: 'name'
- getSearchableColumns(): ['name', 'tags']
- relationsWhitelist: { media: true, pack: true }

Controller routes:
- GET /stickers -> list stickers
- GET /stickers/packs -> list sticker packs
- POST /stickers -> @Auth(['admin']) create sticker
- POST /stickers/packs -> @Auth(['admin']) create pack
- GET /stickers/:id -> get sticker by ID

@acceptance
- [ ] Upload flow uses existing media pipeline.
- [ ] Retrieval via standard comment read path.
- [ ] Proper format validation (image, video, gif).
- [ ] Animation detection for GIFs.
- [ ] Tag-based search and filtering.
- [ ] Pack organization and management.
- [ ] Usage tracking and analytics.