---
alwaysApply: false
---

@rule qr_contract
Entity `QrTicket` (current implementation):
- code (varchar, unique), actionType (enum), status (enum)
- expiresAt (timestamp), usedAt (timestamp), userId (bigint FK, nullable)
- metadata (json), pkceCodeChallenge (varchar), pkceCodeVerifier (varchar)
- indexes: (code), (status, expiresAt), (userId)

Services:
- QrService: ticket creation and management
- QrPollingService: WebSocket polling for status updates
- QrActionExecutorService: action execution framework
- QrGateway: WebSocket gateway for real-time updates

Controller routes:
- POST /qr/tickets -> createTicket
- GET /qr/tickets/:code -> getTicket
- POST /qr/tickets/:code/use -> useTicket
- GET /qr/tickets/:code/poll -> pollTicketStatus (WebSocket)

Actions supported:
- LoginAction: user authentication
- AddFriendAction: friend requests
- JoinOrgAction: organization invitations
- PairAction: device pairing

@acceptance
- [ ] PKCE security implementation for OAuth flows.
- [ ] WebSocket real-time status updates.
- [ ] Proper expiration handling.
- [ ] Action framework with extensible design.
- [ ] Redis-based state management.
- [ ] Secure code generation and validation.
- [ ] Rate limiting on ticket creation.@rule qr_contract
Entity `QrTicket` (current implementation):
- code (varchar, unique), actionType (enum), status (enum)
- expiresAt (timestamp), usedAt (timestamp), userId (bigint FK, nullable)
- metadata (json), pkceCodeChallenge (varchar), pkceCodeVerifier (varchar)
- indexes: (code), (status, expiresAt), (userId)

Services:
- QrService: ticket creation and management
- QrPollingService: WebSocket polling for status updates
- QrActionExecutorService: action execution framework
- QrGateway: WebSocket gateway for real-time updates

Controller routes:
- POST /qr/tickets -> createTicket
- GET /qr/tickets/:code -> getTicket
- POST /qr/tickets/:code/use -> useTicket
- GET /qr/tickets/:code/poll -> pollTicketStatus (WebSocket)

Actions supported:
- LoginAction: user authentication
- AddFriendAction: friend requests
- JoinOrgAction: organization invitations
- PairAction: device pairing

@acceptance
- [ ] PKCE security implementation for OAuth flows.
- [ ] WebSocket real-time status updates.
- [ ] Proper expiration handling.
- [ ] Action framework with extensible design.
- [ ] Redis-based state management.
- [ ] Secure code generation and validation.
- [ ] Rate limiting on ticket creation.