---
alwaysApply: false
---

@rule share_contract
Entities (current implementation):
- ShareChannel: sharing channels (email, social, etc.)
- Campaign: marketing campaigns
- ShareLink: generated share links with tracking
- ShareSession: user sharing sessions
- ShareClick: click tracking with deduplication
- ShareAttribution: attribution tracking
- ShareConversion: conversion tracking
- ShareAggDaily: daily aggregated metrics

Service config:
- Multiple services: ShareService, ShareLinksService, ShareAttributionService, ShareAggregationService
- RabbitMQ integration for async processing
- Redis caching for counters and sessions
- Deduplication via ip_hash/ua_hash/day

Controller routes:
- GET /share/links -> list share links
- POST /share/links -> create share link
- GET /share/redirect/:code -> redirect with tracking
- GET /share/stats -> get sharing statistics
- POST /share/click -> track click (with deduplication)

@acceptance
- [ ] Click ingestion resilient to bots (is_bot flagging/policy).
- [ ] Aggregates cached & invalidated on relevant writes.
- [ ] Proper deduplication to prevent spam.
- [ ] Attribution tracking across channels.
- [ ] Daily aggregation for analytics.
- [ ] Rate limiting on click ingestion.
- [ ] Secure link generation with expiration.@rule share_contract
Entities (current implementation):
- ShareChannel: sharing channels (email, social, etc.)
- Campaign: marketing campaigns
- ShareLink: generated share links with tracking
- ShareSession: user sharing sessions
- ShareClick: click tracking with deduplication
- ShareAttribution: attribution tracking
- ShareConversion: conversion tracking
- ShareAggDaily: daily aggregated metrics

Service config:
- Multiple services: ShareService, ShareLinksService, ShareAttributionService, ShareAggregationService
- RabbitMQ integration for async processing
- Redis caching for counters and sessions
- Deduplication via ip_hash/ua_hash/day

Controller routes:
- GET /share/links -> list share links
- POST /share/links -> create share link
- GET /share/redirect/:code -> redirect with tracking
- GET /share/stats -> get sharing statistics
- POST /share/click -> track click (with deduplication)

@acceptance
- [ ] Click ingestion resilient to bots (is_bot flagging/policy).
- [ ] Aggregates cached & invalidated on relevant writes.
- [ ] Proper deduplication to prevent spam.
- [ ] Attribution tracking across channels.
- [ ] Daily aggregation for analytics.
- [ ] Rate limiting on click ingestion.
- [ ] Secure link generation with expiration.