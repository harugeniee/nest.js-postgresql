@rule articles_contract
Entity `Article` (minimum viable):
- title (varchar 200), slug (unique), is_active (bool default true), user_id (bigint FK), published_at? (timestamp)
- indexes: slug unique, (user_id, created_at) composite suggested

Service config:
- entityName: 'Article'; cache: { prefix: 'articles', ttlSec: 60, swrSec: 30 }
- defaultSearchField: 'title'
- getSearchableColumns(): ['title','summary','content']
- relationsWhitelist: { user: { avatar: true }, tags: true, coverImage: true }
- selectWhitelist: { id:true, title:true, slug:true, user:{ id:true, username:true } }

Controller routes:
- GET /articles -> listOffset or listCursor
- GET /articles/:id -> findById(SnowflakeIdPipe)
- POST /articles -> @Auth() create
- PATCH /articles/:id -> @Auth() update
- DELETE /articles/:id -> @Auth(['admin']) remove

@acceptance
- [ ] Controller has no domain logic.
- [ ] Signed cursor only; no offset leak.
- [ ] Cache invalidated on write; list:* and id:ID keys cleared.
